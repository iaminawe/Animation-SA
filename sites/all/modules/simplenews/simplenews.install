<?php
// $Id: simplenews.install,v 1.3.2.7 2008/06/25 19:21:55 sutharsan Exp $

function simplenews_install() {
  $result = array();
  switch ($GLOBALS['db_type']) {
    case 'mysqli':
    case 'mysql':
      $result[] = db_query("CREATE TABLE {simplenews_subscriptions} (
        snid int(10) NOT NULL auto_increment,
        a_status int(2) NOT NULL default '0',
        s_status int(2) NOT NULL default '0',
        mail varchar(64) NOT NULL default '',
        uid int(10) NOT NULL default '0',
        PRIMARY KEY  (snid),
        KEY mail (mail)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */;");

      $result[] = db_query("CREATE TABLE {simplenews_newsletters} (
        nid int(10) NOT NULL default '0',
        vid int(10) NOT NULL default '0',
        tid int(10) NOT NULL default '0',
        s_status int(2) NOT NULL default '0',
        s_format varchar(8) NOT NULL default '',
        priority int(2) NOT NULL default '0',
        receipt int(2) NOT NULL default '0',
        PRIMARY KEY  (nid)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */;");

      $result[] = db_query("CREATE TABLE {simplenews_snid_tid} (
        snid int(10) NOT NULL default '0',
        tid int(10) NOT NULL default '0',
        PRIMARY KEY  (snid,tid)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;

    case 'pgsql':
      $result[] = db_query("CREATE TABLE {simplenews_subscriptions} (
        snid SERIAL,
        a_status smallint NOT NULL default '0',
        s_status smallint NOT NULL default '0',
        mail varchar(64) NOT NULL default '',
        uid integer NOT NULL default '0',
        PRIMARY KEY  (snid)
        );");
      $result[] = db_query('CREATE INDEX {simplenews_subscriptions}_mail_idx ON {simplenews_subscriptions} (mail)');

      $result[] = db_query("CREATE TABLE {simplenews_newsletters} (
        nid integer NOT NULL default '0',
        vid integer NOT NULL default '0',
        tid integer NOT NULL default '0',
        s_status smallint NOT NULL default '0',
        s_format varchar(8) NOT NULL default '',
        priority smallint NOT NULL default '0',
        receipt smallint NOT NULL default '0',
        PRIMARY KEY  (nid)
        );");

      $result[] = db_query("CREATE TABLE {simplenews_snid_tid} (
        snid integer NOT NULL default '0',
        tid integer NOT NULL default '0',
        PRIMARY KEY  (snid,tid)
        );");
      break;

		case 'mssql':
      $result[] = db_query("CREATE TABLE {simplenews_subscriptions} (
        snid int NOT NULL IDENTITY(1,1),
        a_status int NOT NULL default '0',
        s_status int NOT NULL default '0',
        mail varchar(64) NOT NULL default '',
        uid int NOT NULL default '0',
        PRIMARY KEY (snid)
        );");

      $result[] = db_query("CREATE TABLE {simplenews_newsletters} (
        nid int NOT NULL default '0',
        tid int NOT NULL default '0',
        s_status int NOT NULL default '0',
        s_format varchar(8) NOT NULL default '',
        priority int NOT NULL default '0',
        receipt int NOT NULL default '0',
        PRIMARY KEY (nid)
        );");

      $result[] = db_query("CREATE TABLE {simplenews_snid_tid} (
        snid int NOT NULL default '0',
        tid int NOT NULL default '0',
        PRIMARY KEY  (snid,tid)
        );");
      break;
  }

  if (count($result) != count(array_filter($result))) {
    drupal_set_message(t('The installation of the Simplenews module was unsuccessful.'), 'error');
  }
}
/**
 * Implementation of hook_enable().
 *
 * If required create vocabulary for simplenews newsletter and one newsletter term
 */
function simplenews_enable() {
  if ($vocabulary = taxonomy_get_vocabulary(variable_get('simplenews_vid', ''))) {
    // Existing install. Add back newsletter node type, if the forums
    // vocabulary still exists. Leave all other node types unchanged.
    $vocabulary = (array) $vocabulary;
    $vocabulary['nodes']['simplenews'] = 1;
    // If it exists we remove the 0 key. It is the indication that no node types are selected.
    unset($vocabulary['nodes'][0]);
    taxonomy_save_vocabulary($vocabulary);
  }
  else {
    // Create the simplenews vocabulary if it does not exist.
    $vocabulary = array(
      'name' => t('Newsletter'),
      'multiple' => '0',
      'required' => '0',
      'hierarchy' => '0',
      'relations' => '0',
      'module' => 'simplenews',
      'nodes' => array('simplenews' => 1)
    );
    taxonomy_save_vocabulary($vocabulary);
    variable_set('simplenews_vid', $vocabulary['vid']);
  }

  // Check to see if at least 1 term exists, else create one
  $tid = db_result(db_query('SELECT tid FROM {term_data} WHERE vid = %d', $vocabulary['vid']));
  if (!$tid) {
    $form_values = array(
      'name' => variable_get('site_name', 'Drupal') .' '. t('newsletter'),
      'vid' => $vocabulary['vid'],
      'weight' => 0,
    );
    switch (taxonomy_save_term($form_values)) {
      case SAVED_UPDATED:
        drupal_set_message(t('Updated term %name.', array('%name' => $form_values['name'])));
        break;
      case SAVED_DELETED:
        drupal_set_message(t('Deleted term %name.', array('%name' => $form_values['name'])));
        break;
    }
  }
}

/**
 * Implementation of hook_uninstall().
 */
function simplenews_uninstall() {
  db_query('DROP TABLE {simplenews_snid_tid}');
  db_query('DROP TABLE {simplenews_newsletters}');
  db_query('DROP TABLE {simplenews_subscriptions}');
  db_query("DELETE FROM {variable} WHERE name LIKE 'simplenews_%%'");
}

function simplenews_update_1() {
  return _system_update_utf8(array('sn_snid_tid', 'sn_newsletters', 'sn_subscriptions'));
}

/**
 * Rename sn_* tables to simplenews_* to avoid namespace conflicts.
 */
function simplenews_update_2() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
    case 'pgsql':
      $ret[] = update_sql('ALTER TABLE {sn_snid_tid} RENAME TO {simplenews_snid_tid}');
      $ret[] = update_sql('ALTER TABLE {sn_newsletters} RENAME TO {simplenews_newsletters}');
      $ret[] = update_sql('ALTER TABLE {sn_subscriptions} RENAME TO {simplenews_subscriptions}');
      break;
  }
  return $ret;
}

/**
 * Add index to simplenews_subscriptions
 */
function simplenews_update_5000() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {simplenews_subscriptions} ADD INDEX mail (mail);");
      break;
    case 'pgsql':
      $ret[] = update_sql('CREATE INDEX {simplenews_subscriptions}_mail_idx ON {simplenews_subscriptions} (mail)');
      break;
  }
  return $ret;
}

/**
 * Add index to simplenews_subscriptions
 */
function simplenews_update_5001() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {simplenews_newsletters} ADD vid int(10) NOT NULL default '0'");
      break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {simplenews_newsletters} ADD vid int NOT NULL default '0'");
      break;
  }
  return $ret;
}

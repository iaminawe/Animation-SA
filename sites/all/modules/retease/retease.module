<?php
// $Id: retease.module,v 1.1.2.3 2007/08/20 10:38:02 douggreen Exp $

/** @file
 * Rebuild the node teasers
 */ 

/**
 * Implementation of hook_menu().
 */
function retease_menu($may_cache = TRUE) {
  if ($may_cache) {
    $items = array();
    $items[] = array(
      'path' => 'admin/settings/retease',
      'title' => t('Rebuild Node Teasers'),
      'description' => t('Rebuild the node teasers'),
      'callback' => 'drupal_get_form',
      'callback arguments' => 'retease_settings_form',
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
    );
    $items[] = array(
      'path' => 'admin/settings/retease/start',
      'title' => t('Start Rebuilding Node Teasers'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('retease_start_confirm'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_CALLBACK
    );
    $items[] = array(
      'path' => 'admin/settings/retease/stop',
      'title' => t('Stop Rebuilding Node Teasers'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('retease_stop_confirm'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_CALLBACK
    );
  }
  return $items;
}

function retease_settings_form() {
  $cron_last = variable_get('cron_last', 0);

  // NOTE: don't display this message twice
  if (!$cron_last && !isset($_SESSION['messages']['error'])) {
    drupal_set_message(t('Cron has not run. It appears cron jobs have not been setup on your system. Please check the help pages for <a href="@url">configuring cron jobs</a>.', array('@url' => 'http://drupal.org/cron')), 'error');
  }

  // create a description that includes the current state of re-building
  $started = variable_get('retease_cron_started', FALSE);
  $lastnid = variable_get('retease_cron_lastnid', 0);
  if ($started || $lastnid) {
    $count_done = db_result(db_query("SELECT COUNT(*) FROM {node} WHERE nid < %d", $lastnid));
    $count_todo = db_result(db_query("SELECT COUNT(*) FROM {node} WHERE nid > %d", $lastnid));
    $percent_done = (int) min(100, 100 * $count_done / max(1, $count_done + $count_todo));
    $description .= t('@percent% complete%paused.  ', array('%paused' => $started ? '' : t(' (Paused)'), '@percent' => $percent_done));
  }
  $description .= t('Force all node teasers to be rebuilt.  This is done a few nodes at a time using cron and can take some time on large sites.');

  $form['retease'] = array(
    '#type' => 'fieldset',
    '#title' => t('Re-build Teasers'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => $description,
  );
  if ($started) {
    // when the re-loading has started, add stop and pause buttons
    $form['retease']['stop'] = array(
      '#type' => 'submit',
      '#value' => t('Stop re-building site teasers'),
    );
    if ($lastnid) {
      $form['retease']['pause'] = array(
        '#type' => 'submit',
        '#value' => t('Pause re-building site teasers'),
      );
    }
  }
  elseif ($lastnid) {
    // when paused, add button to pause
    $form['retease']['resume'] = array(
      '#type' => 'submit',
      '#value' => t('Resume re-building site teasers'),
    );
  }
  else {
    // add button to start the node re-loading
    $form['retease']['start'] = array(
      '#type' => 'submit',
      '#value' => t('Re-build site teasers'),
    );
  }

  $form['retease_cron_limit'] = array(
    '#type' => 'select',
    '#title' => t('Nodes per cron'),
    '#options' => drupal_map_assoc(array(10, 20, 50, 100, 200, 500)),
    '#default_value' => variable_get('retease_cron_limit', 100),
    '#description' => t('The maximum number of nodes that will be re-built during one cron run.'),
  );
  $form['#submit']['retease_settings_form_submit'] = array();
  $form['#submit']['system_settings_form_submit'] = array();
  return system_settings_form($form);
}

/**
 * settings form handler
 */
function retease_settings_form_submit($form_id, &$form_values) {
  // start re-loading nodes if button was pressed
  if ($form_values['op'] == $form_values['resume']) {
    variable_set('retease_cron_started', TRUE);
    drupal_set_message(t('The site teaser rebuild has been resumed.'));
  }
  elseif ($form_values['op'] == $form_values['pause']) {
    variable_set('retease_cron_started', FALSE);
    drupal_set_message(t('The site teaser rebuild has been paused.'));
  }
  elseif ($form_values['op'] == $form_values['start']) {
    drupal_goto('admin/settings/retease/start');
  }
  elseif ($form_values['op'] == $form_values['stop']) {
    drupal_goto('admin/settings/retease/stop');
  }
}

/**
 * Menu callback: confirm starting the teaser re-building.
 */
function retease_start_confirm() {
  return confirm_form(
    array(),
    t('Are you sure you want to re-build all the teasers on the site?'),
    'admin/settings/retease',
    t('The teasers will be rebuilt based on the current filters. The current teasers will remain unchanged until they are rebuilt.'),
    t('Re-build site teasers'),
    t('Cancel')
  );
}

/**
 * Handler for start confirmation
 */
function retease_start_confirm_submit($form_id, &$form) {
  if ($form['confirm']) {
    variable_set('retease_cron_started', TRUE);
    variable_set('retease_cron_lastnid', 0);
    drupal_set_message(t('The site teasers will be rebuilt.'));
    return 'admin/settings/retease';
  }
}

/**
 * Menu callback: confirm stopping the teaser re-building.
 */
function retease_stop_confirm() {
  return confirm_form(
    array(),
    t('Are you sure you want STOP re-building teasers on the site?'),
    'admin/settings/retease',
    t('The re-build process will be STOPPED.  If you wish to restart the process, you will have to start from the beginning.  Rather than completely stopping the re-build, you can press Cancel here, then press Pause.'),
    t('Stop re-building teasers'),
    t('Continue')
  );
}

/**
 * Handler for stop confirmation
 */
function retease_stop_confirm_submit($form_id, &$form) {
  if ($form['confirm']) {
    variable_set('retease_cron_started', FALSE);
    variable_set('retease_cron_lastnid', 0);
    drupal_set_message(t('The site teaser re-build has been stopped.'));
    return 'admin/settings/retease';
  }
}

/**
 * Implementation of hook_cron()
 */
function retease_cron() {
  if (variable_get('retease_cron_started', FALSE)) {
    $lastnid = variable_get('retease_cron_lastnid', 0);
    $limit = variable_get('retease_cron_limit', 100);
    $result = db_query_range("SELECT n.nid FROM {node} n LEFT OUTER JOIN {node_revisions} v ON n.nid=v.nid WHERE n.nid > %d ORDER BY n.nid", $lastnid, 0, $limit);
    if (db_num_rows($result) == 0) {
      variable_set('retease_cron_started', FALSE);
      variable_set('retease_cron_lastnid', 0);
    }
    else {
      while ($row = db_fetch_object($result)) {
        if ($node = node_load($row->nid)) {
          $node->teaser = node_teaser($node->body, $node->format);
          node_save($node);
          variable_set('retease_cron_lastnid', $row->nid);
        }
      }
    }
  }
}

<?php

// $Id: simplenews_template.module,v 1.9.4.18 2009/02/11 18:54:45 tbarregren Exp $


/**
 * @file
 * Extends the Simplenews module by providing a themable template with
 * configurable header, footer and style.
 *
 * Author:
 *   Thomas Barregren <http://drupal.org/user/16678>.
 *
 * Sponsors:
 *   Spoon Media <http://www.spoon.com.au/>
 *   NodeOne <http://www.nodeone.se/>
 */


/*****************************************************************************
 * THEMEABLE FUNCTIONS
 *****************************************************************************/

/**
 *  Themeable function for the header.
 */
function theme_simplenews_template_header($header) {
  return "<div class=\"simplenews-template-header\">\n$header\n</div>\n";
}


/**
 *  Themeable function for the header.
 */
function theme_simplenews_template_body($body) {
  return "<div class=\"simplenews-template-body\">\n$body\n</div>\n";
}


/**
 *  Themeable function for the header.
 */
function theme_simplenews_template_footer($footer) {
  return "<div class=\"simplenews-template-footer\">\n$footer\n</div>\n";
}


/**
 * Themeable function for the HTML e-mail subject.
 */
function theme_simplenews_template_mail_subject($newsletter_name, $issue_title) {
  return "[$newsletter_name] $issue_title";
}


/**
 * Themeable function for the HTML e-mail template. If the file
 * simplenews_template.tpl.php exists in the directory of the current theme,
 * it will be used as template. Otherwise, the file simplenews_template.tpl.php
 * included with this module will be used.
 */
function theme_simplenews_template($node, $newsletter_name, $issue_title, $style_element, $bgcolor) {

  // Paths relative Drupal root to templates that can be used. The templates
  // are listed from highest to lowest priority.
  $theme_path = path_to_theme();
  $module_path = drupal_get_path('module', 'simplenews_template');
  $templates = array(
    "$theme_path/simplenews_template-$node->tid.tpl.php",
    "$theme_path/simplenews_template.tpl.php",
    "$module_path/simplenews_template.tpl.php",
  );

  // Render the e-mail by using the first found template of $templates.
  $variables = array('node' => $node, 'newsletter_name' => $newsletter_name, 'issue_title' => $issue_title, 'style_element' => $style_element, 'bgcolor' => $bgcolor);
  foreach ($templates as $template) {
    $template = "./$template";
    if (file_exists($template)) {
      return _phptemplate_render($template, $variables);
    }
  }

}


/**
 * Themeable function that should be overridden instead of
 * theme_mimemail_message() which is already overridden by this  module.
 */
function theme_simplenews_template_mimemail_message($body) {
  return theme_mimemail_message($body);
}


/*****************************************************************************
 * HOOKS
 *****************************************************************************/

/**
 * Implementation of hook_perm().
 */
function simplenews_template_perm() {
  return array('access newsletter preview');
}


/**
 * Implementation of hook_menu().
 */
function simplenews_template_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
      'path' => 'simplenews_template/preview',
      'title' => t('Simplenews Template preview'),
      'callback' => '_simplenews_template_menu_callback',
      'callback arguments' => array('_simplenews_template_preview'),
      'access' => user_access('access newsletter preview'),
      'type' => MENU_CALLBACK,
    );
  }
  return $items;
}


/**
 * Implementation of hook_form_alter().
 */
function simplenews_template_form_alter($form_id, &$form) {
  if ($form_id == 'simplenews_admin_settings') {
    $tid = $form['#validate']['simplenews_admin_settings_validate'][0];
    if ($tid) {
      require_once _simplenews_template_path('simplenews_template_settings.inc');
      _simplenews_template_form_alter_newsletter_settings($form, $tid);
    }
  }
}


/**
 * Implementation of hook_nodeapi().
 */
function simplenews_template_nodeapi(&$node, $op, $a3 = null, $a4 = null) {
  if ($node->type == 'simplenews' && $op == 'view') {
    require_once _simplenews_template_path('simplenews_template.inc');
    return _simplenews_template_node_view($node, $a3, $a4);
  }
}


/**
 * Implementation of hook_link_alter().
 */
function simplenews_template_link_alter(&$node, &$links) {
  if ($node->type == 'simplenews' && $node->s_format == 'html' && user_access('access newsletter preview')) {
    $links['simplenews_preview'] = array(
      'title' => t('Preview'),
      'href' => "simplenews_template/preview/$node->nid",
      'attributes' => array(
        'target' => '_blank',
      ),
    );
  }
}


/*****************************************************************************
 * HOOKING INTO SIMPLENEWS THROUGH IT'S THEAMABLE FUNCTIONS
 *****************************************************************************/

/**
 * Overriding theme_simplenews_newsletter().
 */
function phptemplate_simplenews_newsletter($node, $tid) {
  return _simplenews_template_newsletter($node, $tid);
}


/**
 * Overriding theme_mimemail_message().
 */
function phptemplate_mimemail_message($content) {
  return _simplenews_template_message($content);
}


/*****************************************************************************
 * PERSISTED VARIABLES
 *****************************************************************************/

/**
 * The persisted variable 'header_node'.
 */
function simplenews_template_header_node($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_header_node_$tid", $value, $value, true);
}


/**
 * The persisted variable 'header'.
 */
function simplenews_template_header($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_header_$tid", $value, '');
}


/**
 * The persisted variable 'header format'.
 */
function simplenews_template_header_format($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_header_format_$tid", $value, FILTER_FORMAT_DEFAULT);
}


/**
 * The persisted variable 'footer_node'.
 */
function simplenews_template_footer_node($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_footer_node_$tid", $value, true);
}


/**
 * The persisted variable 'footer'.
 */
function simplenews_template_footer($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_footer_$tid", $value, '');
}


/**
 * The persisted variable 'format'.
 */
function simplenews_template_footer_format($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_footer_format_$tid", $value, FILTER_FORMAT_DEFAULT);
}


/**
 * The persisted variable 'css_node'.
 */
function simplenews_template_css_node($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_css_node_$tid", $value, true);
}


/**
 * The persisted variable 'css'.
 */
function simplenews_template_css($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_css_$tid", $value, '');
}


/**
 * The persisted variable 'bgcolor'.
 */
function simplenews_template_bgcolor($tid, $value = null) {
  return _simplenews_template_variable("simplenews_template_bgcolor_$tid", $value, 'White');
}


/*****************************************************************************
 * PRIVATE IMPLEMENTATIONS - DON'T CALL THESE FUNCTIONS - SUBJECT TO CHANGES *
 *****************************************************************************/

/**
 * Menu callback dispatcher.
 */
function _simplenews_template_menu_callback() {
  $args = func_get_args();
  $callback = array_shift($args);
  require_once _simplenews_template_path('simplenews_template.inc');
  call_user_func_array($callback, $args);
}


/**
 * Returns the path to this module relative the Drupal root.
 */
function _simplenews_template_path($file) {
  static $path = null;
  if ($path === null) {
    $path = drupal_get_path('module', 'simplenews_template');
  }
  return "$path/$file";
}


/**
 * Sets and gets the named persisted variable.
 */
function _simplenews_template_variable($name, $value, $default) {
  if (isset($value)) {
    variable_set($name, $value);
  }
  return variable_get($name, $default);
}